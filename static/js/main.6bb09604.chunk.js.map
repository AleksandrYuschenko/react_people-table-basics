{"version":3,"sources":["components/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","props","person","slug","sex","name","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","error","setError","personSlug","useParams","useEffect","catch","finally","getParent","parentName","find","length","map","born","died","motherName","mother","fatherName","father","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6bb09604.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow px-3\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item', { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person | undefined\n  // eslint-disable-next-line max-len\n};\n\nexport const PersonLink: FC<Props> = (props) => {\n  const {\n    person,\n  } = props;\n\n  return (\n    <Link\n      to={`/people/${person?.slug}`}\n      className={classNames(\n        { 'has-text-danger': person?.sex === 'f' },\n      )}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[] | null>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople().then(setPeople).catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getParent = (parentName: string | null) => {\n    if (parentName && people) {\n      return people.find(person => person.name === parentName);\n    }\n\n    return undefined;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {error && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n          {isLoading\n            ? (<Loader />)\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people?.length !== 0\n                    ? people?.map(person => (\n                      <>\n                        <tr\n                          data-cy=\"person\"\n                          key={person.slug}\n                          className={classNames({\n                            // eslint-disable-next-line max-len\n                            'has-background-warning': person.slug === personSlug,\n                          })}\n                        >\n                          <td>\n                            <PersonLink person={person} />\n                          </td>\n\n                          <td>{person.sex}</td>\n                          <td>{person.born}</td>\n                          <td>{person.died}</td>\n                          <td>\n                            {getParent(person.motherName) && (\n                              <PersonLink\n                                person={{\n                                  ...person,\n                                  mother: getParent(person.motherName),\n                                }.mother}\n                              />\n                            )}\n                            {person.motherName ? person.motherName : '-'}\n                          </td>\n                          <td>\n                            {getParent(person.fatherName) && (\n                              <PersonLink\n                                person={{\n                                  ...person,\n                                  father: getParent(person.fatherName),\n                                }.father}\n                              />\n                            )}\n                            {person.fatherName ? person.fatherName : '-'}\n                          </td>\n                        </tr>\n                      </>\n                    ))\n                    : (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n                </tbody>\n              </table>\n            )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './components/PeoplePage';\n// import { PersonLink } from './components/PersonLink';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage />\n                )}\n              />\n              <Route\n                path=\":personSlug\"\n                element={(\n                  <PeoplePage />\n                )}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}